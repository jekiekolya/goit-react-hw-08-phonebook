{"version":3,"file":"static/js/Contacts.81437f0d.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/InputField/InputField.styled.jsx","components/InputField/InputField.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ModalUpdate/ModalUpdate.styled.jsx","components/ModalUpdate/ModalUpdate.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ButtonStyled = styled.button`\n  padding-top: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[3]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n\n  background-color: ${p => p.theme.colors.mainBg};\n  color: ${p => p.theme.colors.accentSecondary};\n\n  font-size: ${p => p.theme.fontsSizes.s}px;\n  font-weight: 600;\n\n  border: 2px solid ${p => p.theme.colors.accentSecondary};\n  border-radius: ${p => p.theme.space[3]}px;\n\n  &&:active {\n    background-color: ${p => p.theme.colors.accentSecondary};\n    color: ${p => p.theme.colors.mainBg};\n  }\n`;\n","import { ButtonStyled } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ type, name, ...otherProps }) => {\n  return (\n    <ButtonStyled type={type} {...otherProps}>\n      {name}\n    </ButtonStyled>\n  );\n};\n\nButton.defaultProps = {\n  type: 'submit',\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[2]}px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding-top: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[3]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n\n  font-size: ${p => p.theme.fontsSizes.m}px;\n  font-weight: 500;\n\n  background-color: ${p => p.theme.colors.mainBg};\n\n  border: 2px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.space[3]}px;\n\n  color: ${p => p.theme.colors.accentSecondary};\n\n  &:focus-within {\n    border: 2px solid ${p => p.theme.colors.accent};\n    filter: drop-shadow(0px 3px 3px ${p => p.theme.colors.accent});\n    outline: none;\n  }\n`;\n\nexport const NameLabel = styled.span`\n  margin-bottom: ${p => p.theme.space[2]}px;\n\n  font-size: ${p => p.theme.fontsSizes.m}px;\n  font-weight: 600;\n\n  color: ${p => p.theme.colors.accentSecondary};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Label, Input, NameLabel } from './InputField.styled';\n\nexport default function InputField({ nameLabel, ...inputSetting }) {\n  return (\n    <Label>\n      {nameLabel && <NameLabel>{nameLabel}</NameLabel>}\n      <Input {...inputSetting} />\n    </Label>\n  );\n}\n\nInputField.propTypes = {\n  nameLabel: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  required: PropTypes.bool,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: ${p => p.theme.space[7] * 3}px;\n\n  padding-top: ${p => p.theme.space[5]}px;\n  padding-right: ${p => p.theme.space[6]}px;\n  padding-bottom: ${p => p.theme.space[5]}px;\n  padding-left: ${p => p.theme.space[6]}px;\n\n  box-shadow: 0px 2px 18px ${p => p.theme.colors.accent};\n  border-radius: 8px;\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport InputField from '../InputField';\nimport Button from '../Button';\n\nimport { Form } from './ContactForm.styled';\nimport { Box } from 'components/Box';\n\nfunction FormAddContact() {\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChangeName = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleChangeNumber = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Check input value and create notification\n    const statusValidation = checkEqualValue.call(contacts, name);\n    if (statusValidation === 'alert') return;\n\n    dispatch(addContact({ name, number }));\n    // reset values in form\n    resetForm('', '');\n  };\n\n  function resetForm(resetName, resetNumber) {\n    setName(resetName);\n    setNumber(resetNumber);\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Box display=\"flex\" flexDirection=\"column\" gridGap={32}>\n        <InputField\n          nameLabel=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Jekie Kolya\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChangeName}\n        />\n\n        <InputField\n          nameLabel=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"777-77-77\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChangeNumber}\n        />\n\n        <Box display=\"flex\" justifyContent=\"center\">\n          <Button name=\"Add contact\" />\n        </Box>\n      </Box>\n    </Form>\n  );\n}\n\nfunction checkEqualValue(name) {\n  const equalValue = this.filter(item => {\n    return item.name === name;\n  });\n\n  if (equalValue.toString()) {\n    Notify.failure(`${name} is already in contact`);\n    return 'alert';\n  }\n\n  return 'ok';\n}\n\nexport default FormAddContact;\n","import styled from '@emotion/styled';\n\nimport Button from '../Button';\n\nexport const ButtonBlue = styled(Button)`\n  color: #11b5e4;\n  border-color: #11b5e4;\n  &&:active {\n    background-color: #11b5e4;\n  }\n`;\n\nexport const Form = styled.form`\n  width: ${p => p.theme.space[7] * 3}px;\n\n  padding-top: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[5]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n`;\n\nexport const ButtonForm = styled(Button)``;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { ButtonBlue, Form } from './ModalUpdate.styled';\nimport { Box } from 'components/Box';\nimport InputField from 'components/InputField';\nimport { getContacts } from 'redux/selectors';\nimport { ButtonForm } from './ModalUpdate.styled';\nimport { updateContact } from 'redux/contacts/contactsOperations';\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nfunction BootstrapDialogTitle(props) {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      <Box display=\"flex\" justifyContent=\"center\">\n        {children}\n      </Box>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: theme => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n}\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function ModalUpdate({ name, number, contactId }) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  // FORM\n  const contacts = useSelector(getContacts);\n  const [nameNew, setNameNew] = useState(name);\n  const [numberNew, setNumberNew] = useState(number);\n\n  const dispatch = useDispatch();\n\n  const handleChangeName = e => {\n    setNameNew(e.currentTarget.value);\n  };\n\n  const handleChangeNumber = e => {\n    setNumberNew(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Check input value and create notification\n    const statusValidation = checkEqualValue.call(contacts, nameNew, numberNew);\n    if (statusValidation === 'alert') return;\n\n    dispatch(\n      updateContact({\n        contact: { name: nameNew, number: numberNew },\n        contactId,\n      })\n    );\n    handleClose();\n  };\n\n  return (\n    <div>\n      <ButtonBlue type=\"button\" name=\"Update\" onClick={handleClickOpen} />\n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n          color=\"#02897A\"\n          fontWeight={700}\n        >\n          Update Contact\n        </BootstrapDialogTitle>\n\n        <Form onSubmit={handleSubmit}>\n          <Box display=\"flex\" flexDirection=\"column\" gridGap={32}>\n            <InputField\n              nameLabel=\"Name\"\n              type=\"text\"\n              name=\"nameNew\"\n              value={nameNew}\n              placeholder=\"Jekie Kolya\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={handleChangeName}\n            />\n\n            <InputField\n              nameLabel=\"Number\"\n              type=\"tel\"\n              name=\"numberNew\"\n              value={numberNew}\n              placeholder=\"777-77-77\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={handleChangeNumber}\n            />\n\n            <Box display=\"flex\" justifyContent=\"center\">\n              <ButtonForm name=\"Update contact\" />\n            </Box>\n          </Box>\n        </Form>\n      </BootstrapDialog>\n    </div>\n  );\n}\n\nModalUpdate.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n\nfunction checkEqualValue(name, number) {\n  const equalValue = this.filter(item => {\n    return item.name === name && item.number === number;\n  });\n\n  if (equalValue.toString()) {\n    Notify.failure(`Name and Number not changed`);\n    return 'alert';\n  }\n\n  return 'ok';\n}\n","import styled from '@emotion/styled';\nimport { MdPermContactCalendar } from 'react-icons/md';\n\nimport Button from '../Button';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[2]}px;\n\n  margin-top: ${p => p.theme.space[3]}px;\n`;\n\nexport const ContactItem = styled.li`\n  display: grid;\n  grid-template-columns:\n    ${p => p.theme.space[4]}px\n    1fr\n    ${p => p.theme.space[8]}px;\n  grid-template-rows: ${p => p.theme.space[5]}px;\n  grid-column-gap: ${p => p.theme.space[5]}px;\n  justify-content: space-between;\n  align-items: center;\n  gap: ${p => p.theme.space[4]}px;\n\n  font-size: ${p => p.theme.fontsSizes.m}px;\n\n  padding: ${p => p.theme.space[3]}px;\n\n  &&:hover,\n  &&:focus {\n    box-shadow: 0px 2px 18px ${p => p.theme.colors.accent};\n    border-radius: 8px;\n  }\n`;\n\nexport const NameContact = styled.div`\n  text-align: start;\n`;\n\nexport const Icon = styled(MdPermContactCalendar)`\n  width: ${p => p.theme.space[4]}px;\n  height: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.accentSecondary};\n`;\n\nexport const ButtonRed = styled(Button)`\n  color: #f03e3d;\n  border-color: #f03e3d;\n\n  &&:active {\n    background-color: #f03e3d;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ThreeDots } from 'react-loader-spinner';\n\nimport {\n  getIsLoading,\n  getFilteredContacts,\n  getIsLoggedIn,\n} from 'redux/selectors';\nimport {\n  fetchContacts,\n  deleteContact,\n} from 'redux/contacts/contactsOperations';\n\nimport { Box } from '../Box';\nimport ModalUpdate from 'components/ModalUpdate/ModalUpdate';\n\nimport {\n  ContactsList,\n  ContactItem,\n  Icon,\n  NameContact,\n  ButtonRed,\n} from './ContactList.styled';\n\nfunction ContactList() {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const isLoading = useSelector(getIsLoading);\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  const dispatch = useDispatch();\n  const deleteContactReducer = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <Box>\n      {isLoading ? (\n        <ThreeDots color=\"#02897A\" />\n      ) : (\n        <ContactsList>\n          {filteredContacts.map(contact => {\n            return (\n              <ContactItem key={contact.id}>\n                <Icon />\n                <NameContact>\n                  {contact.name}: {contact.number}\n                </NameContact>\n                <Box display=\"flex\" justifyContent=\"end\" gridGap={2}>\n                  <ModalUpdate\n                    name={contact.name}\n                    number={contact.number}\n                    contactId={contact.id}\n                  />\n                  <ButtonRed\n                    type=\"button\"\n                    name=\"Delete\"\n                    onClick={() => deleteContactReducer(contact.id)}\n                  />\n                </Box>\n              </ContactItem>\n            );\n          })}\n        </ContactsList>\n      )}\n    </Box>\n  );\n}\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\n\nimport InputField from '../InputField';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handlerFilterList = e => {\n    const inputValue = e.target.value.toLocaleLowerCase();\n    dispatch(setFilter(inputValue));\n  };\n\n  return (\n    <InputField\n      nameLabel=\"Find contacts by name\"\n      onChange={handlerFilterList}\n    />\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const MainTitle = styled.h1`\n  font-size: ${p => p.theme.fontsSizes.l}px;\n\n  padding-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  font-size: ${p => p.theme.fontsSizes.l}px;\n\n  padding-bottom: ${p => p.theme.space[3]}px;\n`;\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { getIsLoggedIn } from 'redux/selectors';\n\nimport { Box } from 'components/Box';\nimport FormAddContact from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport Filter from 'components/Filter/Filter';\nimport { MainTitle, SecondaryTitle } from './Contacts.styled';\n\nexport default function Contacts() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate('/login');\n      return;\n    }\n  }, [isLoggedIn, navigate]);\n\n  return (\n    <Box\n      bg=\"mainBg\"\n      color=\"text\"\n      padding=\"30px\"\n      mt=\"60px\"\n      display=\"grid\"\n      gridTemplateColumns=\"2fr 3fr\"\n      gridTemplateRows=\"auto\"\n    >\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n        gridGap={36}\n      >\n        <MainTitle>Add Contact</MainTitle>\n        <FormAddContact />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" gridGap={36}>\n        <SecondaryTitle>Contacts</SecondaryTitle>\n        <Box>\n          <Filter />\n          <ContactList />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n"],"names":["ButtonStyled","styled","p","theme","space","colors","mainBg","accentSecondary","fontsSizes","s","Button","type","name","otherProps","defaultProps","Label","Input","m","border","accent","NameLabel","InputField","nameLabel","inputSetting","Form","checkEqualValue","this","filter","item","toString","Notify","contacts","useSelector","getContacts","useState","setName","number","setNumber","dispatch","useDispatch","onSubmit","e","resetNumber","preventDefault","call","addContact","Box","display","flexDirection","gridGap","value","placeholder","pattern","title","required","onChange","currentTarget","justifyContent","ButtonBlue","ButtonForm","BootstrapDialog","Dialog","padding","spacing","BootstrapDialogTitle","props","children","onClose","other","DialogTitle","sx","IconButton","onClick","position","right","top","color","palette","grey","Close","ModalUpdate","contactId","React","open","setOpen","handleClose","nameNew","setNameNew","numberNew","setNumberNew","id","fontWeight","updateContact","contact","ContactsList","ContactItem","NameContact","Icon","MdPermContactCalendar","ButtonRed","filteredContacts","getFilteredContacts","isLoading","getIsLoading","isLoggedIn","getIsLoggedIn","useEffect","fetchContacts","map","deleteContact","inputValue","target","toLocaleLowerCase","setFilter","MainTitle","l","SecondaryTitle","Contacts","navigate","useNavigate","bg","mt","gridTemplateColumns","gridTemplateRows","alignItems"],"sourceRoot":""}