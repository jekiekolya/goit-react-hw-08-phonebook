{"version":3,"file":"static/js/Contacts.b13463d4.chunk.js","mappings":"gNAEaA,E,QAAeC,EAAAA,OAAH,yUACR,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACC,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEG,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,MAAnB,IACZ,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOE,eAAnB,IAEG,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,WAAWC,CAAvB,IAGM,SAAAP,GAAC,OAAIA,EAAEC,MAAME,OAAOE,eAAnB,IACJ,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGI,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOE,eAAnB,IACZ,SAAAL,GAAC,OAAIA,EAAEC,MAAME,OAAOC,MAAnB,I,4BChBRI,EAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,KAASC,GAAiB,YAChD,OACE,SAACb,GAAD,gBAAcW,KAAMA,GAAUE,GAA9B,aACGD,IAGN,EAEDF,EAAOI,aAAe,CACpBH,KAAM,UASR,O,kHCnBaI,EAAQd,EAAAA,EAAAA,MAAH,oFAGT,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGGY,EAAQf,EAAAA,EAAAA,MAAH,8YAED,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACC,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEJ,SAAAF,GAAC,OAAIA,EAAEC,MAAMK,WAAWS,CAAvB,IAGM,SAAAf,GAAC,OAAIA,EAAEC,MAAME,OAAOC,MAAnB,IAED,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOa,MAAnB,IACJ,SAAAhB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAET,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOE,eAAnB,IAGY,SAAAL,GAAC,OAAIA,EAAEC,MAAME,OAAOc,MAAnB,IACa,SAAAjB,GAAC,OAAIA,EAAEC,MAAME,OAAOc,MAAnB,IAK1BC,EAAYnB,EAAAA,EAAAA,KAAH,8GACH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEL,SAAAF,GAAC,OAAIA,EAAEC,MAAMK,WAAWS,CAAvB,IAGL,SAAAf,GAAC,OAAIA,EAAEC,MAAME,OAAOE,eAAnB,I,0BCjCG,SAASc,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,UAAcC,GAAgB,YACjE,OACE,UAACR,EAAD,WACGO,IAAa,SAACF,EAAD,UAAYE,KAC1B,SAACN,GAAD,UAAWO,MAGhB,C,+LCVYC,EAAOvB,EAAAA,EAAAA,KAAH,uMACN,SAAAC,GAAC,OAAuB,EAAnBA,EAAEC,MAAMC,MAAM,EAAlB,IAEK,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACC,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEU,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOc,MAAnB,I,UCqE9B,SAASM,EAAgBb,GAKvB,OAJmBc,KAAKC,QAAO,SAAAC,GAC7B,OAAOA,EAAKhB,OAASA,CACtB,IAEciB,YACbC,EAAAA,OAAAA,QAAA,UAAkBlB,EAAlB,2BACO,SAGF,IACR,CAED,I,QAAA,EA/EA,WACE,IAAMmB,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAC7B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOtB,EAAP,KAAauB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MA0BjB,OACE,SAACf,EAAD,CAAMgB,SAjBa,SAAAC,GAGnB,IAQ4BC,GAV5BD,EAAEE,iBAGuB,UADAlB,EAAgBmB,KAAKb,EAAUnB,MAGxD0B,GAASO,EAAAA,EAAAA,IAAW,CAAEjC,KAAAA,EAAMwB,OAAAA,KAKAM,EAHd,GAIdP,EAJU,IAKVE,EAAUK,GAJX,EAQC,UACE,UAACI,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASC,QAAS,GAApD,WACE,SAAC5B,EAAA,EAAD,CACEC,UAAU,OACVX,KAAK,OACLC,KAAK,OACLsC,MAAOtC,EACPuC,YAAY,cACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SApCiB,SAAAd,GACvBN,EAAQM,EAAEe,cAAcN,MACzB,KAqCK,SAAC7B,EAAA,EAAD,CACEC,UAAU,SACVX,KAAK,MACLC,KAAK,SACLsC,MAAOd,EACPe,YAAY,YACZC,QAAQ,yFACRC,MAAM,gGACNC,UAAQ,EACRC,SA5CmB,SAAAd,GACzBJ,EAAUI,EAAEe,cAAcN,MAC3B,KA6CK,SAACJ,EAAA,EAAD,CAAKC,QAAQ,OAAOU,eAAe,SAAnC,UACE,SAAC/C,EAAA,EAAD,CAAQE,KAAK,sBAKtB,E,oBC1EY8C,EAAezD,EAAAA,EAAAA,GAAH,4GAGhB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEM,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGJuD,EAAc1D,EAAAA,EAAAA,GAAH,iXAGlB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAED,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACiB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACJ,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGb,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEK,SAAAF,GAAC,OAAIA,EAAEC,MAAMK,WAAWS,CAAvB,IAEH,SAAAf,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAIiB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOc,MAAnB,IAKnByC,EAAc3D,EAAAA,EAAAA,IAAH,8CAIX4D,GAAO5D,EAAAA,EAAAA,GAAO6D,EAAAA,IAAP7D,CAAH,0EACN,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOE,eAAnB,IC2BZ,I,IAAA,EA3CA,WACE,IAAMwD,GAAmB/B,EAAAA,EAAAA,IAAYgC,EAAAA,IAC/BC,GAAYjC,EAAAA,EAAAA,IAAYkC,EAAAA,IACxBC,GAAanC,EAAAA,EAAAA,IAAYoC,EAAAA,IAEzB9B,GAAWC,EAAAA,EAAAA,MAWjB,OANA8B,EAAAA,EAAAA,YAAU,WACJF,GACF7B,GAASgC,EAAAA,EAAAA,MAEZ,GAAE,CAAChC,EAAU6B,KAGZ,SAACrB,EAAA,EAAD,UACGmB,GACC,SAAC,KAAD,CAAWM,MAAM,aAEjB,SAACb,EAAD,UACGK,EAAiBS,KAAI,SAAAC,GACpB,OACE,UAACd,EAAD,YACE,SAACE,EAAD,KACA,UAACD,EAAD,WACGa,EAAQ7D,KADX,KACmB6D,EAAQrC,WAE3B,SAAC1B,EAAA,EAAD,CACEC,KAAK,SACLC,KAAK,SACL8D,QAAS,kBA1BIC,EA0BuBF,EAAQG,QAzB1DtC,GAASuC,EAAAA,EAAAA,IAAcF,IADI,IAAAA,CA0BJ,MARKF,EAAQG,GAY7B,OAKV,E,UC7CD,EAhBe,WACb,IAAMtC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAClB,EAAA,EAAD,CACEC,UAAU,wBACViC,SARsB,SAAAd,GACxB,IAAMqC,EAAarC,EAAEsC,OAAO7B,MAAM8B,oBAClC1C,GAAS2C,EAAAA,EAAAA,GAAUH,GACpB,GAQF,ECjBYI,EAAYjF,EAAAA,EAAAA,GAAH,yEACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMK,WAAW2E,CAAvB,IAEI,SAAAjF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGRgF,EAAiBnF,EAAAA,EAAAA,GAAH,yEACZ,SAAAC,GAAC,OAAIA,EAAEC,MAAMK,WAAW2E,CAAvB,IAEI,SAAAjF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,ICCN,SAASiF,IACtB,IAAMlB,GAAanC,EAAAA,EAAAA,IAAYoC,EAAAA,IAEzBkB,GAAWC,EAAAA,EAAAA,MAOjB,OANAlB,EAAAA,EAAAA,YAAU,WACHF,GACHmB,EAAS,SAEZ,GAAE,CAACnB,EAAYmB,KAGd,UAACxC,EAAA,EAAD,CACE0C,GAAG,SACHjB,MAAM,OACNkB,QAAQ,OACRC,GAAG,OACH3C,QAAQ,OACR4C,oBAAoB,UACpBC,iBAAiB,OAPnB,WASE,UAAC9C,EAAA,EAAD,CACEC,QAAQ,OACR8C,WAAW,SACX7C,cAAc,SACdC,QAAS,GAJX,WAME,SAACiC,EAAD,2BACA,SAAC,EAAD,QAEF,UAACpC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASC,QAAS,GAApD,WACE,SAACmC,EAAD,wBACA,UAACtC,EAAA,EAAD,YACE,SAAC,EAAD,KACA,SAAC,EAAD,YAKT,C","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/InputField/InputField.styled.jsx","components/InputField/InputField.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ButtonStyled = styled.button`\n  padding-top: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[3]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n\n  background-color: ${p => p.theme.colors.mainBg};\n  color: ${p => p.theme.colors.accentSecondary};\n\n  font-size: ${p => p.theme.fontsSizes.s}px;\n  font-weight: 600;\n\n  border: 2px solid ${p => p.theme.colors.accentSecondary};\n  border-radius: ${p => p.theme.space[3]}px;\n\n  &&:active {\n    background-color: ${p => p.theme.colors.accentSecondary};\n    color: ${p => p.theme.colors.mainBg};\n  }\n`;\n","import { ButtonStyled } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ type, name, ...otherProps }) => {\n  return (\n    <ButtonStyled type={type} {...otherProps}>\n      {name}\n    </ButtonStyled>\n  );\n};\n\nButton.defaultProps = {\n  type: 'submit',\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[2]}px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding-top: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[3]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n\n  font-size: ${p => p.theme.fontsSizes.m}px;\n  font-weight: 500;\n\n  background-color: ${p => p.theme.colors.mainBg};\n\n  border: 2px solid ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.space[3]}px;\n\n  color: ${p => p.theme.colors.accentSecondary};\n\n  &:focus-within {\n    border: 2px solid ${p => p.theme.colors.accent};\n    filter: drop-shadow(0px 3px 3px ${p => p.theme.colors.accent});\n    outline: none;\n  }\n`;\n\nexport const NameLabel = styled.span`\n  margin-bottom: ${p => p.theme.space[2]}px;\n\n  font-size: ${p => p.theme.fontsSizes.m}px;\n  font-weight: 600;\n\n  color: ${p => p.theme.colors.accentSecondary};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Label, Input, NameLabel } from './InputField.styled';\n\nexport default function InputField({ nameLabel, ...inputSetting }) {\n  return (\n    <Label>\n      {nameLabel && <NameLabel>{nameLabel}</NameLabel>}\n      <Input {...inputSetting} />\n    </Label>\n  );\n}\n\nInputField.propTypes = {\n  nameLabel: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  required: PropTypes.bool,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: ${p => p.theme.space[7] * 3}px;\n\n  padding-top: ${p => p.theme.space[5]}px;\n  padding-right: ${p => p.theme.space[6]}px;\n  padding-bottom: ${p => p.theme.space[5]}px;\n  padding-left: ${p => p.theme.space[6]}px;\n\n  box-shadow: 0px 2px 18px ${p => p.theme.colors.accent};\n  border-radius: 8px;\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport InputField from '../InputField';\nimport Button from '../Button';\n\nimport { Form } from './ContactForm.styled';\nimport { Box } from 'components/Box';\n\nfunction FormAddContact() {\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChangeName = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleChangeNumber = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Check input value and create notification\n    const statusValidation = checkEqualValue.call(contacts, name);\n    if (statusValidation === 'alert') return;\n\n    dispatch(addContact({ name, number }));\n    // reset values in form\n    resetForm('', '');\n  };\n\n  function resetForm(resetName, resetNumber) {\n    setName(resetName);\n    setNumber(resetNumber);\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Box display=\"flex\" flexDirection=\"column\" gridGap={32}>\n        <InputField\n          nameLabel=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Jekie Kolya\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChangeName}\n        />\n\n        <InputField\n          nameLabel=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"777-77-77\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChangeNumber}\n        />\n\n        <Box display=\"flex\" justifyContent=\"center\">\n          <Button name=\"Add contact\" />\n        </Box>\n      </Box>\n    </Form>\n  );\n}\n\nfunction checkEqualValue(name) {\n  const equalValue = this.filter(item => {\n    return item.name === name;\n  });\n\n  if (equalValue.toString()) {\n    Notify.failure(`${name} is already in contact`);\n    return 'alert';\n  }\n\n  return 'ok';\n}\n\nexport default FormAddContact;\n","import styled from '@emotion/styled';\nimport { MdPermContactCalendar } from 'react-icons/md';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[2]}px;\n\n  margin-top: ${p => p.theme.space[3]}px;\n`;\n\nexport const ContactItem = styled.li`\n  display: grid;\n  grid-template-columns:\n    ${p => p.theme.space[4]}px\n    1fr\n    ${p => p.theme.space[7]}px;\n  grid-template-rows: ${p => p.theme.space[5]}px;\n  grid-column-gap: ${p => p.theme.space[5]}px;\n  justify-content: space-between;\n  align-items: center;\n  gap: ${p => p.theme.space[4]}px;\n\n  font-size: ${p => p.theme.fontsSizes.m}px;\n\n  padding: ${p => p.theme.space[3]}px;\n\n  &&:hover,\n  &&:focus {\n    box-shadow: 0px 2px 18px ${p => p.theme.colors.accent};\n    border-radius: 8px;\n  }\n`;\n\nexport const NameContact = styled.div`\n  text-align: start;\n`;\n\nexport const Icon = styled(MdPermContactCalendar)`\n  width: ${p => p.theme.space[4]}px;\n  height: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.accentSecondary};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ThreeDots } from 'react-loader-spinner';\n\nimport {\n  getIsLoading,\n  getFilteredContacts,\n  getIsLoggedIn,\n} from 'redux/selectors';\nimport {\n  fetchContacts,\n  deleteContact,\n} from 'redux/contacts/contactsOperations';\n\nimport {\n  ContactsList,\n  ContactItem,\n  Icon,\n  NameContact,\n} from './ContactList.styled';\n\nimport Button from '../Button';\n\nimport { Box } from '../Box';\nimport { useEffect } from 'react';\n\nfunction ContactList() {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const isLoading = useSelector(getIsLoading);\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  const dispatch = useDispatch();\n  const deleteContactReducer = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <Box>\n      {isLoading ? (\n        <ThreeDots color=\"#02897A\" />\n      ) : (\n        <ContactsList>\n          {filteredContacts.map(contact => {\n            return (\n              <ContactItem key={contact.id}>\n                <Icon />\n                <NameContact>\n                  {contact.name}: {contact.number}\n                </NameContact>\n                <Button\n                  type=\"button\"\n                  name=\"Delete\"\n                  onClick={() => deleteContactReducer(contact.id)}\n                />\n              </ContactItem>\n            );\n          })}\n        </ContactsList>\n      )}\n    </Box>\n  );\n}\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\n\nimport InputField from '../InputField';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handlerFilterList = e => {\n    const inputValue = e.target.value.toLocaleLowerCase();\n    dispatch(setFilter(inputValue));\n  };\n\n  return (\n    <InputField\n      nameLabel=\"Find contacts by name\"\n      onChange={handlerFilterList}\n    />\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const MainTitle = styled.h1`\n  font-size: ${p => p.theme.fontsSizes.l}px;\n\n  padding-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  font-size: ${p => p.theme.fontsSizes.l}px;\n\n  padding-bottom: ${p => p.theme.space[3]}px;\n`;\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { getIsLoggedIn } from 'redux/selectors';\n\nimport { Box } from 'components/Box';\nimport FormAddContact from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport Filter from 'components/Filter/Filter';\nimport { MainTitle, SecondaryTitle } from './Contacts.styled';\n\nexport default function Contacts() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate('/login');\n    }\n  }, [isLoggedIn, navigate]);\n\n  return (\n    <Box\n      bg=\"mainBg\"\n      color=\"text\"\n      padding=\"30px\"\n      mt=\"60px\"\n      display=\"grid\"\n      gridTemplateColumns=\"2fr 3fr\"\n      gridTemplateRows=\"auto\"\n    >\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n        gridGap={36}\n      >\n        <MainTitle>Add Contact</MainTitle>\n        <FormAddContact />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" gridGap={36}>\n        <SecondaryTitle>Contacts</SecondaryTitle>\n        <Box>\n          <Filter />\n          <ContactList />\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n"],"names":["ButtonStyled","styled","p","theme","space","colors","mainBg","accentSecondary","fontsSizes","s","Button","type","name","otherProps","defaultProps","Label","Input","m","border","accent","NameLabel","InputField","nameLabel","inputSetting","Form","checkEqualValue","this","filter","item","toString","Notify","contacts","useSelector","getContacts","useState","setName","number","setNumber","dispatch","useDispatch","onSubmit","e","resetNumber","preventDefault","call","addContact","Box","display","flexDirection","gridGap","value","placeholder","pattern","title","required","onChange","currentTarget","justifyContent","ContactsList","ContactItem","NameContact","Icon","MdPermContactCalendar","filteredContacts","getFilteredContacts","isLoading","getIsLoading","isLoggedIn","getIsLoggedIn","useEffect","fetchContacts","color","map","contact","onClick","contactId","id","deleteContact","inputValue","target","toLocaleLowerCase","setFilter","MainTitle","l","SecondaryTitle","Contacts","navigate","useNavigate","bg","padding","mt","gridTemplateColumns","gridTemplateRows","alignItems"],"sourceRoot":""}